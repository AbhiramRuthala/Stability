import tensorflow as tf
from tf.keras.models import Sequential
from tf.keras.layers import Dense, Conv2D, MaxPooling2D, Flatten, Dropout
import cv2
import matplotlib.pyplot as plt
import numpy as np
import os
import imghdr

video = cv2.VideoCapture(0)

while True:
    ret, frame = video.read()

    cv2.imshow("Frame", frame)

    if cv2.waitKey(1) == ord("s"):
        cv2.imwrite(frame, 'abhiram.jpg')
        break

#mood types we wish to learn - irritability and boredom

#fig, ax = plt.subplots()

data = tf.keras.utils.import_dataset_from_directory('data')
dataszn = data.as_numpy_iterator()
batch = dataszn.next()

#fig plots go here

data = data.map(lambda: x/255, y)
newbatch = data.as_numpy_iterator().next()

train_data = int(0.7*len(data))
test_data = int(0.2*len(data))
val_data = int(0.1*len(data))

train = data.take(train_data)
test = data.skip(train_data).take(test_data)
val = data.skip(train_data).skip(test_data).take(val_data)

#Creating the DNN model to test if someone is irritable vs if someone is bored.
model = Sequential()

model.add(Conv2D(16, (3,3), 1, activation='relu', image_shape=(256, 256, 3)))
model.add(MaxPooling2D())

model.add(Conv2D(32, (3,3),1, activation='relu'))
model.add(MaxPooling2D())

model.add(Conv2D(16, (3,3), 1, activation='relu'))
model.add(MaxPooling2D())

model.add(Flatten())

model.add(Dense(256, activation='sigmoid'))
model.add(Dense(1, activation='relu'))

logs = 'logs'
#callback = tensorflowcallback

print(model.summary)

model.fit(train, epochs=20, logs=logs)


#add model.predict and all its commands
#run through the functions and get a result - this involves using Precision, Accuracy and Recall and optimizing the yhat response.

#yhat

#yhat > 0.5:
print("You look bored. How can I help?")

#else:
print("Are you irritated?")
